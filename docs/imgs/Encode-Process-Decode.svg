<svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="1791px" width="1068.5px" viewBox="-10 -10 1088.5 1811" content="&lt;mxGraphModel dx=&quot;2418&quot; dy=&quot;1610&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;0&quot; pageScale=&quot;1&quot; pageWidth=&quot;850&quot; pageHeight=&quot;1100&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&lt;root&gt;&lt;mxCell id=&quot;0&quot;/&gt;&lt;mxCell id=&quot;1&quot; parent=&quot;0&quot;/&gt;&lt;mxCell id=&quot;39&quot; style=&quot;edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;2&quot; target=&quot;3&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;2&quot; value=&quot;Define &amp;lt;b&amp;gt;(encoder, processor, decoder)&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;div style=&amp;quot;text-align: left&amp;quot;&amp;gt;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;For the processor, no need to worry about input size. No need for it to match the data if no encoder is defined. &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;But, output size always has to match input size.&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;For all networks, all layers must be stored in a collection attribute called &amp;quot;layers&amp;quot;.&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&lt;mxGeometry x=&quot;-280&quot; y=&quot;-170&quot; width=&quot;280&quot; height=&quot;210&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;7&quot; style=&quot;edgeStyle=none;html=1;exitX=0;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;3&quot; target=&quot;5&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;10&quot; value=&quot;NO&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; vertex=&quot;1&quot; connectable=&quot;0&quot; parent=&quot;7&quot;&gt;&lt;mxGeometry x=&quot;0.3683&quot; y=&quot;-1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&lt;mxPoint as=&quot;offset&quot;/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;8&quot; style=&quot;edgeStyle=none;html=1;exitX=1;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;3&quot; target=&quot;6&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;9&quot; value=&quot;YES&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; vertex=&quot;1&quot; connectable=&quot;0&quot; parent=&quot;8&quot;&gt;&lt;mxGeometry x=&quot;0.3125&quot; y=&quot;-2&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&lt;mxPoint as=&quot;offset&quot;/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;3&quot; value=&quot;encoder = None ?&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&lt;mxGeometry x=&quot;-255&quot; y=&quot;100&quot; width=&quot;230&quot; height=&quot;140&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;41&quot; style=&quot;edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;5&quot; target=&quot;40&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&lt;Array as=&quot;points&quot;&gt;&lt;mxPoint x=&quot;-510&quot; y=&quot;1380&quot;/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;5&quot; value=&quot;projection_scheme = neural&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;Check that the input and outputs sizes of linear layers in encoder, processor, and decoder, match each other.&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&lt;mxGeometry x=&quot;-610&quot; y=&quot;280.17&quot; width=&quot;200&quot; height=&quot;119.83&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;14&quot; style=&quot;edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;6&quot; target=&quot;13&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;6&quot; value=&quot;Check the user-defined projection scheme: random, identity, etc.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;font color=&amp;quot;#ff8000&amp;quot;&amp;gt;If the user had inputted &amp;quot;neural&amp;quot;, then an error is returned, or a warning ignoring the encoder !&amp;lt;/font&amp;gt;&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&lt;mxGeometry x=&quot;145&quot; y=&quot;280.17&quot; width=&quot;210&quot; height=&quot;119.83&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;16&quot; style=&quot;edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;13&quot; target=&quot;15&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;13&quot; value=&quot;encoder = eqx.Module(self.basis)&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;basis has same shape as data, plus a leading axis. For instance, in the MNIST case, the final basis can be of shape (10*factor, 28, 28), containing templates for each numbers.&amp;amp;nbsp;&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&lt;mxGeometry x=&quot;140&quot; y=&quot;430&quot; width=&quot;210&quot; height=&quot;120&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;38&quot; style=&quot;edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;15&quot; target=&quot;22&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;15&quot; value=&quot;In training loop,&amp;amp;nbsp;&amp;lt;span style=&amp;quot;text-align: left&amp;quot;&amp;gt;replace encoder's basis attribute with a bigger basis.&amp;amp;nbsp;&amp;lt;/span&amp;gt;&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&lt;mxGeometry x=&quot;135&quot; y=&quot;580&quot; width=&quot;220&quot; height=&quot;110&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;28&quot; style=&quot;edgeStyle=none;html=1;exitX=0;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;22&quot; target=&quot;23&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;30&quot; value=&quot;NO&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; vertex=&quot;1&quot; connectable=&quot;0&quot; parent=&quot;28&quot;&gt;&lt;mxGeometry x=&quot;0.2526&quot; y=&quot;-1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&lt;mxPoint as=&quot;offset&quot;/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;29&quot; style=&quot;edgeStyle=none;html=1;exitX=1;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;22&quot; target=&quot;24&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;31&quot; value=&quot;YES&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; vertex=&quot;1&quot; connectable=&quot;0&quot; parent=&quot;29&quot;&gt;&lt;mxGeometry x=&quot;0.3183&quot; y=&quot;1&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&lt;mxPoint as=&quot;offset&quot;/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;22&quot; value=&quot;Are there linear layers in the processor ?&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&lt;mxGeometry x=&quot;150&quot; y=&quot;720.17&quot; width=&quot;187.5&quot; height=&quot;140&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;37&quot; style=&quot;edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;23&quot; target=&quot;25&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;23&quot; value=&quot;We are probably dealing with convolutions end-to-end. &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;We do nothing !&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&lt;mxGeometry x=&quot;22.5&quot; y=&quot;880&quot; width=&quot;135&quot; height=&quot;170&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;36&quot; style=&quot;edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=1;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;24&quot; target=&quot;25&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;24&quot; value=&quot;&amp;lt;span&amp;gt;Copy the weights, and change the input and output sizes of every linear layers we find in the processor.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;Just to be clear. No new layer will be created here !&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&lt;mxGeometry x=&quot;337.5&quot; y=&quot;880&quot; width=&quot;120&quot; height=&quot;170&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;32&quot; style=&quot;edgeStyle=none;html=1;exitX=0;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;25&quot; target=&quot;26&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&lt;mxPoint x=&quot;3.13&quot; y=&quot;1240.0000000000002&quot; as=&quot;targetPoint&quot;/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;33&quot; value=&quot;NO&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; vertex=&quot;1&quot; connectable=&quot;0&quot; parent=&quot;32&quot;&gt;&lt;mxGeometry x=&quot;0.4815&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&lt;mxPoint x=&quot;-1&quot; as=&quot;offset&quot;/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;34&quot; style=&quot;edgeStyle=none;html=1;exitX=1;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;25&quot; target=&quot;27&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;35&quot; value=&quot;YES&quot; style=&quot;edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];&quot; vertex=&quot;1&quot; connectable=&quot;0&quot; parent=&quot;34&quot;&gt;&lt;mxGeometry x=&quot;0.3407&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&lt;mxPoint as=&quot;offset&quot;/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;25&quot; value=&quot;Are there linear layers in the decoder ?&quot; style=&quot;rhombus;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&lt;mxGeometry x=&quot;151.88&quot; y=&quot;1040&quot; width=&quot;190&quot; height=&quot;140&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;42&quot; style=&quot;edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;26&quot; target=&quot;40&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;26&quot; value=&quot;We do nothing !&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&lt;mxGeometry x=&quot;22.499999999999996&quot; y=&quot;1210&quot; width=&quot;135&quot; height=&quot;170&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;43&quot; style=&quot;edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;27&quot; target=&quot;40&quot;&gt;&lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&lt;mxPoint x=&quot;-110&quot; y=&quot;1760&quot; as=&quot;targetPoint&quot;/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;27&quot; value=&quot;&amp;lt;span&amp;gt;Copy the weights, and change the input and output sizes of every linear layers we find.&amp;lt;/span&amp;gt;&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&lt;mxGeometry x=&quot;337.5&quot; y=&quot;1210&quot; width=&quot;120&quot; height=&quot;170&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;mxCell id=&quot;40&quot; value=&quot;Perform vanilla NODE or PinT, based on force_serial.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;PinT should work, even if z0 is a tensor !&amp;amp;nbsp;&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&lt;mxGeometry x=&quot;-250&quot; y=&quot;1530&quot; width=&quot;230&quot; height=&quot;90&quot; as=&quot;geometry&quot;/&gt;&lt;/mxCell&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;"><style type="text/css"></style><path d="M 470.5 210.5 L 470.5 264.13" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 470.5 269.38 L 467 262.38 L 470.5 264.13 L 474 262.38 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="330.5" y="0.5" width="280" height="210" rx="31.5" ry="31.5" fill="#ffffff" stroke="#000000" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 278px; height: 1px; padding-top: 106px; margin-left: 332px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; ">Define <b>(encoder, processor, decoder)</b><br /><br /><div style="text-align: left"><ul><li><span>For the processor, no need to worry about input size. No need for it to match the data if no encoder is defined. </span><span>But, output size always has to match input size.</span></li><li><span>For all networks, all layers must be stored in a collection attribute called "layers".</span></li></ul></div></div></div></div></foreignObject></g><path d="M 413 375.5 L 106.69 449.18" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 101.59 450.41 L 107.57 445.37 L 106.69 449.18 L 109.21 452.17 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 426px; margin-left: 199px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">NO</div></div></div></foreignObject></g><path d="M 528 375.5 L 854.29 449.27" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 859.41 450.42 L 851.81 452.29 L 854.29 449.27 L 853.35 445.47 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 427px; margin-left: 747px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">YES</div></div></div></foreignObject></g><path d="M 470.5 270.5 L 585.5 340.5 L 470.5 410.5 L 355.5 340.5 Z" fill="#f8cecc" stroke="#b85450" stroke-miterlimit="10" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 228px; height: 1px; padding-top: 341px; margin-left: 357px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; ">encoder = None ?</div></div></div></foreignObject></g><path d="M 100.5 570.5 L 100.5 1540.5 Q 100.5 1550.5 109.78 1554.21 L 469.59 1698.13" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 474.46 1700.08 L 466.66 1700.73 L 469.59 1698.13 L 469.26 1694.24 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="0.5" y="450.67" width="200" height="119.83" rx="17.97" ry="17.97" fill="#ffffff" stroke="#000000" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 511px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; ">projection_scheme = neural<br /><br />Check that the input and outputs sizes of linear layers in encoder, processor, and decoder, match each other.</div></div></div></foreignObject></g><path d="M 860.5 570.5 L 859.19 594.14" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 858.9 599.38 L 855.79 592.2 L 859.19 594.14 L 862.78 592.59 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="755.5" y="450.67" width="210" height="119.83" rx="17.97" ry="17.97" fill="#ffffff" stroke="#000000" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 208px; height: 1px; padding-top: 511px; margin-left: 757px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; ">Check the user-defined projection scheme: random, identity, etc.<br /><br /><font color="#ff8000">If the user had inputted "neural", then an error is returned, or a warning ignoring the encoder !</font></div></div></div></foreignObject></g><path d="M 855.5 720.5 L 855.5 744.13" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 855.5 749.38 L 852 742.38 L 855.5 744.13 L 859 742.38 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="750.5" y="600.5" width="210" height="120" rx="18" ry="18" fill="#ffffff" stroke="#000000" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 208px; height: 1px; padding-top: 661px; margin-left: 752px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; ">encoder = eqx.Module(self.basis)<br /><br />basis has same shape as data, plus a leading axis. For instance, in the MNIST case, the final basis can be of shape (10*factor, 28, 28), containing templates for each numbers. </div></div></div></foreignObject></g><path d="M 855.5 860.5 L 854.51 884.31" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 854.3 889.55 L 851.09 882.41 L 854.51 884.31 L 858.08 882.7 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="745.5" y="750.5" width="220" height="110" rx="16.5" ry="16.5" fill="#ffffff" stroke="#000000" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 218px; height: 1px; padding-top: 806px; margin-left: 747px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; ">In training loop, <span style="text-align: left">replace encoder's basis attribute with a bigger basis. </span></div></div></div></foreignObject></g><path d="M 807.38 995.67 L 706.17 1047.59" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 701.49 1049.99 L 706.13 1043.68 L 706.17 1047.59 L 709.32 1049.91 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1030px; margin-left: 741px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">NO</div></div></div></foreignObject></g><path d="M 901.13 995.67 L 1002.33 1047.59" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1007.01 1049.99 L 999.18 1049.91 L 1002.33 1047.59 L 1002.37 1043.68 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1031px; margin-left: 972px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">YES</div></div></div></foreignObject></g><path d="M 854.25 890.67 L 948 960.67 L 854.25 1030.67 L 760.5 960.67 Z" fill="#d5e8d4" stroke="#82b366" stroke-miterlimit="10" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 186px; height: 1px; padding-top: 961px; margin-left: 762px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; ">Are there linear layers in the processor ?</div></div></div></foreignObject></g><path d="M 700.5 1220.5 L 803.67 1244.08" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 808.79 1245.25 L 801.19 1247.1 L 803.67 1244.08 L 802.75 1240.28 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="633" y="1050.5" width="135" height="170" rx="20.25" ry="20.25" fill="#ffffff" stroke="#000000" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 133px; height: 1px; padding-top: 1136px; margin-left: 634px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; ">We are probably dealing with convolutions end-to-end. <br /><br /><br />We do nothing !</div></div></div></foreignObject></g><path d="M 1008 1220.5 L 911.07 1244" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 905.97 1245.24 L 911.94 1240.19 L 911.07 1244 L 913.59 1246.99 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="948" y="1050.5" width="120" height="170" rx="18" ry="18" fill="#ffffff" stroke="#000000" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 1136px; margin-left: 949px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; "><span>Copy the weights, and change the input and output sizes of every linear layers we find in the processor.<br /><br />Just to be clear. No new layer will be created here !<br /></span></div></div></div></foreignObject></g><path d="M 809.88 1315.5 L 705.97 1377.25" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 701.46 1379.93 L 705.69 1373.34 L 705.97 1377.25 L 709.27 1379.36 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1364px; margin-left: 729px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">NO</div></div></div></foreignObject></g><path d="M 904.88 1315.5 L 1002.61 1377.1" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1007.05 1379.9 L 999.27 1379.13 L 1002.61 1377.1 L 1003 1373.21 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1360px; margin-left: 975px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; background-color: #ffffff; white-space: nowrap; ">YES</div></div></div></foreignObject></g><path d="M 857.38 1210.5 L 952.38 1280.5 L 857.38 1350.5 L 762.38 1280.5 Z" fill="#dae8fc" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 188px; height: 1px; padding-top: 1281px; margin-left: 763px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; ">Are there linear layers in the decoder ?</div></div></div></foreignObject></g><path d="M 700.5 1550.5 L 480.8 1696.97" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 476.43 1699.88 L 480.31 1693.08 L 480.8 1696.97 L 484.2 1698.91 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="633" y="1380.5" width="135" height="170" rx="20.25" ry="20.25" fill="#ffffff" stroke="#000000" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 133px; height: 1px; padding-top: 1466px; margin-left: 634px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; ">We do nothing !</div></div></div></foreignObject></g><path d="M 1008 1550.5 L 481.63 1698.77" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 476.58 1700.2 L 482.36 1694.93 L 481.63 1698.77 L 484.26 1701.67 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><rect x="948" y="1380.5" width="120" height="170" rx="18" ry="18" fill="#ffffff" stroke="#000000" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 1466px; margin-left: 949px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; "><span>Copy the weights, and change the input and output sizes of every linear layers we find.</span></div></div></div></foreignObject></g><rect x="360.5" y="1700.5" width="230" height="90" rx="13.5" ry="13.5" fill="#ffffff" stroke="#000000" pointer-events="none"/><g><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 228px; height: 1px; padding-top: 1746px; margin-left: 362px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: none; white-space: normal; word-wrap: normal; ">Perform vanilla NODE or PinT, based on force_serial.<br /><br />PinT should work, even if z0 is a tensor ! </div></div></div></foreignObject></g></svg>